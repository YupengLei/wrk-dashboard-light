{"ast":null,"code":"var _jsxFileName = \"/Users/yupenglei/Documents/wrk-dashboard-light/src/component/events/programs.js\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport eventData from \"../../data/events_warehouse_calendar.csv\";\nimport { ChartHeader, ChartFooter, ChartContainer } from \"../housing/availableUnits\";\nimport { RadioButton } from \"./number\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProgramsRadioButton extends React.Component {\n  render() {\n    const yearRange = [\"2020\", \"2021\", \"2022\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-buttons\",\n      children: yearRange.map(element => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(RadioButton, {\n            value: element,\n            onChange: this.props.onChange,\n            id: element + \"programs\",\n            checked: this.props.year === element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this)\n        }, element, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class Programs extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      programYear: \"2022\"\n    };\n\n    this.handleProgramsYearChange = value => {\n      let programYear = this.state.programYear;\n      programYear = value;\n      this.setState({\n        programYear: programYear\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.drawPrograms();\n    };\n\n    this.componentDidUpdate = () => {\n      d3.selectAll(\"svg\").remove();\n      this.drawPrograms();\n    };\n\n    this.drawPrograms = () => {\n      //set svg size\n      let w = 1000;\n      let h = 500;\n      let padding = 40;\n      let leftMargin = 400;\n      let dataset = [],\n          xScale,\n          yScale,\n          xAxis,\n          yAxis; //loading data from csv file\n\n      d3.csv(eventData).then(data => {\n        let programGroup = {};\n\n        for (let obj of data) {\n          if (obj.year !== this.state.programYear) continue;\n          let name = obj.EventName;\n          let hour = +obj.duration_hour;\n          programGroup[name] = programGroup[name] ? programGroup[name] + hour : hour;\n        }\n\n        let topTenSum = 0,\n            totalSum = 0;\n\n        for (let key in programGroup) {\n          totalSum += programGroup[key];\n          dataset.push([key, programGroup[key]]);\n        }\n\n        dataset.sort((a, b) => a[1] - b[1]);\n        dataset = dataset.slice(-10);\n\n        for (let array of dataset) {\n          topTenSum += array[1];\n        } //construct a band scale with specified domain and range\n\n\n        yScale = d3.scaleBand().domain(dataset.map(d => d[0])).range([h - padding, padding]).paddingInner(0.8); //construct a continuous scale with specified domain and range\n\n        xScale = d3.scaleLinear().domain([0, d3.max(dataset, d => d[1]) + 100]).range([leftMargin, w - padding]); //construct a left-oriented axis generator for the given scale\n\n        yAxis = d3.axisLeft().scale(yScale); //construct a top-oriented axis generator for the given scale\n\n        xAxis = d3.axisTop().scale(xScale).tickFormat(d => d + \" h.\").ticks(5); //create a svg element\n\n        let svg = d3.select(this.props.programsRef.current).append(\"svg\").attr(\"width\", w).attr(\"height\", h); //create rect element and load dataset\n\n        let rect = svg.selectAll(\"rect\").data(dataset).enter().append(\"rect\");\n        rect.attr(\"x\", leftMargin).attr(\"y\", d => yScale(d[0])).attr(\"width\", 0).attr(\"height\", yScale.bandwidth()).attr(\"fill\", d => \"#a8ddb5\").transition().duration(700).delay((d, i) => i * 300).attr(\"width\", d => xScale(d[1]) - leftMargin); //Create axis-x and axis-y\n\n        svg.append(\"g\").attr(\"class\", \"axis-x-programs\").attr(\"transform\", `translate(0, ${padding})`).attr(\"color\", \"#555\").call(xAxis).selectAll(\"text\").attr(\"font-size\", \"15px\").attr(\"color\", \"#000\");\n        svg.append(\"g\").attr(\"class\", \"axis-y-programs\").attr(\"transform\", `translate(${leftMargin}, 0)`).attr(\"color\", \"#555\").call(yAxis).selectAll(\"text\").attr(\"font-size\", \"15px\").attr(\"color\", \"#000\"); //define sortBars function to sort bars \n\n        let sortOrder = false;\n\n        const sortBars = () => {\n          sortOrder = !sortOrder;\n          dataset.sort((a, b) => sortOrder ? b[1] - a[1] : a[1] - b[1]);\n          yScale.domain(dataset.map(d => d[0]));\n          d3.select(\".axis-y-programs\").transition(\"yAxis\").delay((d, i) => i * 10).duration(500).call(yAxis);\n          rect.transition(\"sortBars\").delay((d, i) => i * 10).duration(500).attr(\"y\", d => yScale(d[0]));\n        }; //define event listeners for click, mouseover, mouseout\n\n\n        rect.on(\"click\", () => sortBars()).on(\"mouseover\", (event, d) => {\n          d3.select(event.currentTarget).attr(\"fill\", \"#fd8d3c\");\n          d3.select(\"#programs\").style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\").select(\"#value\").text(d[1]);\n          d3.select(\"#programs\").select(\"#year\").text(d[0]);\n          d3.select(\"#programs\").select(\"#change\").text(totalSum - topTenSum);\n          d3.select(\"#programs\").classed(\"hidden\", false);\n        }).on(\"mouseout\", (event, d) => {\n          d3.select(event.currentTarget).transition(\"restoreBarColor\").duration(250).attr(\"fill\", d => \"#a8ddb5\");\n          d3.select(\"#programs\").classed(\"hidden\", true);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"programs-hours\",\n      style: {\n        display: this.props.selectedStatsID === 2 ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChartHeader, {\n        chartTitle: \"Top ten events with most hours\",\n        dotColor: \"#a8ddb5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgramsRadioButton, {\n        onChange: e => this.handleProgramsYearChange(e.target.value),\n        year: this.state.programYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n        containerRef: this.props.programsRef,\n        tooltipID: \"programs\",\n        tooltipValueTitle: \"total hours\",\n        tooltipOption: \"total hours of other programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChartFooter, {\n        chartSource: \"The Warehouse Calendar, The Warehouse.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","d3","eventData","ChartHeader","ChartFooter","ChartContainer","RadioButton","ProgramsRadioButton","Component","render","yearRange","map","element","props","onChange","year","Programs","state","programYear","handleProgramsYearChange","value","setState","componentDidMount","drawPrograms","componentDidUpdate","selectAll","remove","w","h","padding","leftMargin","dataset","xScale","yScale","xAxis","yAxis","csv","then","data","programGroup","obj","name","EventName","hour","duration_hour","topTenSum","totalSum","key","push","sort","a","b","slice","array","scaleBand","domain","d","range","paddingInner","scaleLinear","max","axisLeft","scale","axisTop","tickFormat","ticks","svg","select","programsRef","current","append","attr","rect","enter","bandwidth","transition","duration","delay","i","call","sortOrder","sortBars","on","event","currentTarget","style","pageX","pageY","text","classed","catch","error","console","log","display","selectedStatsID","e","target"],"sources":["/Users/yupenglei/Documents/wrk-dashboard-light/src/component/events/programs.js"],"sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport eventData from \"../../data/events_warehouse_calendar.csv\";\nimport { ChartHeader, ChartFooter, ChartContainer } from \"../housing/availableUnits\";\nimport { RadioButton } from \"./number\";\n\nclass ProgramsRadioButton extends React.Component {\n    render() {\n        const yearRange = [\"2020\", \"2021\", \"2022\"];\n        return (\n            <div className=\"radio-buttons\">\n                {yearRange.map(element => {\n                    return (\n                        <React.Fragment key={element}>\n                            <RadioButton\n                                value={element}\n                                onChange={this.props.onChange}\n                                id={element + \"programs\"}\n                                checked={this.props.year === element}\n                            />\n                        </React.Fragment>\n                    );\n                })} \n            </div>\n        );\n        \n    }\n}\n\nexport default class Programs extends React.Component {\n\n    state = {\n        programYear: \"2022\"\n    }\n\n    handleProgramsYearChange = (value) => {\n        let programYear = this.state.programYear;\n        programYear = value;\n        this.setState({\n            programYear: programYear\n        })\n    }\n\n    componentDidMount = () => {\n        this.drawPrograms();\n    }\n\n    componentDidUpdate = () => {\n        d3.selectAll(\"svg\").remove();\n        this.drawPrograms();\n    }\n\n    drawPrograms = () => {\n        //set svg size\n        let w = 1000;\n        let h = 500;\n        let padding = 40;\n        let leftMargin = 400;\n\n\n        let dataset = [], xScale, yScale, xAxis, yAxis;\n\n        //loading data from csv file\n        d3.csv(eventData).then(data => {\n\n            let programGroup = {};\n\n            for (let obj of data) {\n                if (obj.year !== this.state.programYear) continue;\n                let name = obj.EventName;\n                let hour = +obj.duration_hour;\n                programGroup[name] = programGroup[name] ? programGroup[name] + hour : hour;\n                \n            }\n\n            let topTenSum = 0, totalSum = 0;\n\n            for (let key in programGroup) {\n                totalSum += programGroup[key];\n                dataset.push([key, programGroup[key]]);\n            }\n\n            dataset.sort((a, b) => a[1] - b[1]);\n\n            dataset = dataset.slice(-10);\n\n            for (let array of dataset) {\n                topTenSum += array[1];\n            }\n\n            //construct a band scale with specified domain and range\n            yScale = d3.scaleBand()\n                        .domain(dataset.map(d => d[0]))\n                        .range([h - padding, padding])\n                        .paddingInner(0.8);\n                                \n            //construct a continuous scale with specified domain and range\n            xScale = d3.scaleLinear()\n                        .domain([0, d3.max(dataset, d => d[1]) + 100])\n                        .range([leftMargin, w - padding])                                       \n\n            //construct a left-oriented axis generator for the given scale\n            yAxis = d3.axisLeft()\n                        .scale(yScale);\n\n            //construct a top-oriented axis generator for the given scale\n            xAxis = d3.axisTop()\n                        .scale(xScale)\n                        .tickFormat(d => d + \" h.\")\n                        .ticks(5);                            \n            \n            //create a svg element\n            let svg = d3.select(this.props.programsRef.current)\n                        .append(\"svg\")\n                        .attr(\"width\", w)\n                        .attr(\"height\", h);\n\n            //create rect element and load dataset\n            let rect = svg.selectAll(\"rect\")\n                            .data(dataset)\n                            .enter()\n                            .append(\"rect\");\n\n            rect.attr(\"x\", leftMargin)\n                .attr(\"y\", d => yScale(d[0]))\n                .attr(\"width\", 0)\n                .attr(\"height\", yScale.bandwidth())\n                .attr(\"fill\", d => \"#a8ddb5\")\n                .transition()\n                    .duration(700)\n                    .delay((d, i) => i * 300)\n                    .attr(\"width\", d => xScale(d[1]) - leftMargin);\n\n\n            //Create axis-x and axis-y\n            svg.append(\"g\")\n                .attr(\"class\", \"axis-x-programs\")\n                .attr(\"transform\", `translate(0, ${padding})`)\n                .attr(\"color\", \"#555\")\n                .call(xAxis)\n                .selectAll(\"text\")\n                .attr(\"font-size\", \"15px\")\n                .attr(\"color\", \"#000\")\n     \n            svg.append(\"g\")\n                .attr(\"class\", \"axis-y-programs\")\n                .attr(\"transform\", `translate(${leftMargin}, 0)`)\n                .attr(\"color\", \"#555\")\n                .call(yAxis)\n                .selectAll(\"text\")\n                .attr(\"font-size\", \"15px\")\n                .attr(\"color\", \"#000\");\n\n\n            //define sortBars function to sort bars \n            let sortOrder = false;\n            const sortBars = () => {\n                sortOrder = !sortOrder; \n                dataset.sort((a, b) => sortOrder ? b[1] - a[1] : a[1] - b[1]);\n                yScale.domain(dataset.map(d => d[0]));\n\n                d3.select(\".axis-y-programs\")\n                    .transition(\"yAxis\")\n                    .delay((d, i) => i * 10)\n                    .duration(500)\n                    .call(yAxis);\n\n                rect.transition(\"sortBars\")\n                    .delay((d, i) => i * 10)\n                    .duration(500)\n                    .attr(\"y\", d => yScale(d[0]));\n\n            }\n\n            //define event listeners for click, mouseover, mouseout\n            rect.on(\"click\", () => sortBars())\n                .on(\"mouseover\", (event, d) => {\n\n                        d3.select(event.currentTarget)\n                            .attr(\"fill\", \"#fd8d3c\");\n\n                        d3.select(\"#programs\")\n                            .style(\"left\", event.pageX + \"px\")\n                            .style(\"top\", event.pageY + \"px\")\n                            .select(\"#value\")\n                            .text(d[1]);\n\n                        d3.select(\"#programs\")\n                            .select(\"#year\")\n                            .text(d[0]);\n\n                        d3.select(\"#programs\")\n                            .select(\"#change\")\n                            .text(totalSum - topTenSum);\n                            \n                        d3.select(\"#programs\").classed(\"hidden\", false);\n\n                    })\n                    .on(\"mouseout\", (event, d) => {\n                        d3.select(event.currentTarget)\n                            .transition(\"restoreBarColor\")\n                            .duration(250)\n                            .attr(\"fill\",  d => \"#a8ddb5\");\n\n                        d3.select(\"#programs\").classed(\"hidden\", true);\n                    });\n    \n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"programs-hours\" style={{display: this.props.selectedStatsID === 2 ? \"block\" : \"none\"}}>\n                <ChartHeader \n                    chartTitle=\"Top ten events with most hours\"\n                    dotColor=\"#a8ddb5\"\n                />\n                <ProgramsRadioButton\n                    onChange={e => this.handleProgramsYearChange(e.target.value)} \n                    year={this.state.programYear}\n                />\n                <ChartContainer \n                    containerRef={this.props.programsRef} \n                    tooltipID=\"programs\"\n                    tooltipValueTitle=\"total hours\"\n                    tooltipOption=\"total hours of other programs\"\n                />\n                <ChartFooter chartSource=\"The Warehouse Calendar, The Warehouse.\" />\n            </div>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}