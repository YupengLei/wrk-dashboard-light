{"ast":null,"code":"var _jsxFileName = \"/Users/yupenglei/Documents/wrk-dashboard-light/src/component/events/hours.js\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport numberData from \"../../data/events_warehouse_calendar.csv\";\nimport { ChartHeader, ChartFooter, ChartContainer } from \"../housing/availableUnits\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Hours extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.componentDidMount = () => {\n      this.drawHours();\n    };\n\n    this.componentDidUpdate = () => {\n      d3.select(\"svg\").remove();\n      this.drawHours();\n    };\n\n    this.drawHours = () => {\n      //set svg size\n      let w = 1000;\n      let h = 500;\n      let padding = 120;\n      let dataset2022 = [],\n          dataset2021 = [],\n          dataset2020 = [],\n          xScale,\n          yScale,\n          xAxis,\n          yAxis; //loading data from csv file\n\n      d3.csv(numberData).then(data => {\n        let group2022 = {},\n            group2021 = {},\n            group2020 = {};\n        let monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May.\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n\n        for (let obj of data) {\n          let year = obj.year;\n          let month = obj.month;\n          let hour = +obj.duration_hour;\n\n          if (year === \"2022\") {\n            group2022[month] = group2022[month] ? group2022[month] + hour : hour;\n          } else if (year === \"2021\") {\n            group2021[month] = group2021[month] ? group2021[month] + hour : hour;\n          } else {\n            group2020[month] = group2020[month] ? group2020[month] + hour : hour;\n          }\n        }\n\n        for (let key in group2022) {\n          dataset2022.push([monthNames[+key - 1], group2022[key], +key]);\n        }\n\n        for (let key in group2021) {\n          dataset2021.push([monthNames[+key - 1], group2021[key], +key]);\n        }\n\n        for (let key in group2020) {\n          dataset2020.push([monthNames[+key - 1], group2020[key], +key]);\n        } //construct a band scale with specified domain and range\n\n\n        xScale = d3.scaleBand().domain(monthNames).range([padding, w - padding]).paddingInner(1); //construct a continuous scale with specified domain and range\n\n        yScale = d3.scaleLinear().domain([0, 400]).range([h - padding, padding]); //construct a bootom-oriented axis generator for the given scale\n\n        xAxis = d3.axisBottom().scale(xScale); //construct a left-oriented axis generator for the given scale\n\n        yAxis = d3.axisLeft().scale(yScale).tickFormat(d => d + \" h.\").ticks(5);\n        let line = d3.line().x(d => xScale(d[0])).y(d => yScale(d[1])); //create svg element\n\n        let svg = d3.select(this.props.hoursRef.current).append(\"svg\").attr(\"width\", w).attr(\"height\", h); //create lines\n\n        let path2022 = svg.append(\"path\").datum(dataset2022).attr(\"class\", \"line\").attr(\"d\", line);\n        let path2021 = svg.append(\"path\").datum(dataset2021).attr(\"class\", \"line2021\").attr(\"d\", line);\n        let path2020 = svg.append(\"path\").datum(dataset2020).attr(\"class\", \"line2020\").attr(\"d\", line); //create dots\n\n        let circle2022 = svg.append(\"g\").selectAll(\"circle\").data(dataset2022).enter().append(\"circle\").attr(\"cx\", d => xScale(d[0])).attr(\"cy\", d => yScale(d[1])).attr(\"r\", 5).attr(\"fill\", \"#a8ddb5\");\n        let circle2021 = svg.append(\"g\").selectAll(\"circle\").data(dataset2021).enter().append(\"circle\").attr(\"cx\", d => xScale(d[0])).attr(\"cy\", d => yScale(d[1])).attr(\"r\", 5).attr(\"fill\", \"#e7298a\");\n        let circle2020 = svg.append(\"g\").selectAll(\"circle\").data(dataset2020).enter().append(\"circle\").attr(\"cx\", d => xScale(d[0])).attr(\"cy\", d => yScale(d[1])).attr(\"r\", 5).attr(\"fill\", \"#fee391\");\n        let totalLength2022 = path2022.node().getTotalLength();\n        path2022.attr(\"stroke-dasharray\", totalLength2022 + \" \" + totalLength2022).attr(\"stroke-dashoffset\", totalLength2022).transition().duration(4000).attr(\"stroke-dashoffset\", 0);\n        let totalLength2021 = path2021.node().getTotalLength();\n        path2021.attr(\"stroke-dasharray\", totalLength2021 + \" \" + totalLength2021).attr(\"stroke-dashoffset\", totalLength2021).transition().duration(4000).attr(\"stroke-dashoffset\", 0);\n        let totalLength2020 = path2020.node().getTotalLength();\n        path2020.attr(\"stroke-dasharray\", totalLength2020 + \" \" + totalLength2020).attr(\"stroke-dashoffset\", totalLength2020).transition().duration(4000).attr(\"stroke-dashoffset\", 0); //Create axis-x and axis-y\n\n        svg.append(\"g\").attr(\"class\", \"axis-x\").attr(\"transform\", `translate(0, ${h - padding})`).attr(\"color\", \"#555\").call(xAxis).selectAll(\"text\").attr(\"font-size\", \"15px\").attr(\"color\", \"#000\");\n        svg.append(\"g\").attr(\"class\", \"axis-y\").attr(\"transform\", `translate(${padding}, 0)`).attr(\"color\", \"#555\").call(yAxis).selectAll(\"text\").attr(\"font-size\", \"15px\").attr(\"color\", \"#000\"); //add label to each line\n\n        svg.append(\"text\").attr(\"transform\", `translate(${w - 100}, ${yScale(dataset2022[dataset2022.length - 1][1])})`).attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").style(\"fill\", \"#a8ddb5\").transition().delay(4000).duration(400).text(\"2022\");\n        svg.append(\"text\").attr(\"transform\", `translate(${w - 100}, ${yScale(dataset2021[dataset2021.length - 1][1])})`).attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").style(\"fill\", \"#e7298a\").transition().delay(4000).duration(400).text(\"2021\");\n        svg.append(\"text\").attr(\"transform\", `translate(${w - 100}, ${yScale(dataset2020[dataset2020.length - 1][1])})`).attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").style(\"fill\", \"#fee391\").transition().delay(4000).duration(400).text(\"2020\"); //define event listeners for click, mouseover, mouseout\n\n        circle2022.on(\"mouseover\", (event, d) => {\n          d3.select(event.currentTarget).attr(\"fill\", \"#fd8d3c\");\n          d3.select(\"#hours\").style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\").style(\"background-color\", \"#391D6A\").selectAll(\"p\").style(\"color\", \"#d95f02\").select(\"#value\").text(d[1]);\n          d3.select(\"#hours\").select(\"#year\").text(\"2022 \" + d[0]);\n          d3.select(\"#hours\").classed(\"hidden\", false);\n        }).on(\"mouseout\", (event, d) => {\n          d3.select(event.currentTarget).transition(\"restoreBarColor\").duration(250).attr(\"fill\", d => \"#a8ddb5\");\n          d3.select(\"#hours\").classed(\"hidden\", true);\n        });\n        circle2021.on(\"mouseover\", (event, d) => {\n          d3.select(event.currentTarget).attr(\"fill\", \"#fd8d3c\");\n          d3.select(\"#hours\").style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\").style(\"background-color\", \"#391D6A\").selectAll(\"p\").style(\"color\", \"#e7298a\").select(\"#value\").text(d[1]);\n          d3.select(\"#hours\").select(\"#year\").text(\"2021 \" + d[0]);\n          d3.select(\"#hours\").classed(\"hidden\", false);\n        }).on(\"mouseout\", (event, d) => {\n          d3.select(event.currentTarget).transition(\"restoreBarColor\").duration(250).attr(\"fill\", d => \"#e7298a\");\n          d3.select(\"#hours\").classed(\"hidden\", true);\n        });\n        circle2020.on(\"mouseover\", (event, d) => {\n          d3.select(event.currentTarget).attr(\"fill\", \"#fd8d3c\");\n          d3.select(\"#hours\").style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\").style(\"background-color\", \"#391D6A\").selectAll(\"p\").style(\"color\", \"#fee391\").select(\"#value\").text(d[1]);\n          d3.select(\"#hours\").select(\"#year\").text(\"2020 \" + d[0]);\n          d3.select(\"#hours\").classed(\"hidden\", false);\n        }).on(\"mouseout\", (event, d) => {\n          d3.select(event.currentTarget).transition(\"restoreBarColor\").duration(250).attr(\"fill\", d => \"#fee391\");\n          d3.select(\"#hours\").classed(\"hidden\", true);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hours-monthly\",\n      style: {\n        display: this.props.selectedStatsID === 1 ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChartHeader, {\n        chartTitle: \"Event hours per month\",\n        dotColor: \"#fee391\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n        containerRef: this.props.hoursRef,\n        tooltipID: \"hours\",\n        tooltipValueTitle: \"hours\",\n        tooltipOption: \"out of\",\n        display: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChartFooter, {\n        chartSource: \"The Warehouse Calendar, The Warehouse.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","d3","numberData","ChartHeader","ChartFooter","ChartContainer","Hours","Component","componentDidMount","drawHours","componentDidUpdate","select","remove","w","h","padding","dataset2022","dataset2021","dataset2020","xScale","yScale","xAxis","yAxis","csv","then","data","group2022","group2021","group2020","monthNames","obj","year","month","hour","duration_hour","key","push","scaleBand","domain","range","paddingInner","scaleLinear","axisBottom","scale","axisLeft","tickFormat","d","ticks","line","x","y","svg","props","hoursRef","current","append","attr","path2022","datum","path2021","path2020","circle2022","selectAll","enter","circle2021","circle2020","totalLength2022","node","getTotalLength","transition","duration","totalLength2021","totalLength2020","call","length","style","delay","text","on","event","currentTarget","pageX","pageY","classed","catch","error","console","log","render","display","selectedStatsID"],"sources":["/Users/yupenglei/Documents/wrk-dashboard-light/src/component/events/hours.js"],"sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport numberData from \"../../data/events_warehouse_calendar.csv\";\nimport { ChartHeader, ChartFooter, ChartContainer } from \"../housing/availableUnits\";\n\n\nexport default class Hours extends React.Component {\n\n    componentDidMount = () => {\n        this.drawHours();\n    }\n\n    componentDidUpdate = () => {\n        d3.select(\"svg\").remove();\n        this.drawHours();\n    }\n\n    drawHours = () => {\n        //set svg size\n        let w = 1000;\n        let h = 500;\n        let padding = 120;\n\n        let dataset2022 = [], dataset2021 = [], dataset2020 = [],xScale, yScale, xAxis, yAxis;\n        //loading data from csv file\n        d3.csv(numberData).then(data => {\n\n            let group2022 = {}, group2021 = {}, group2020 = {};\n\n\n            let monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May.\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n            \n            \n            for (let obj of data) {\n                let year = obj.year;\n                let month = obj.month;\n                let hour = +obj.duration_hour;\n                if (year === \"2022\") {\n                    group2022[month] = group2022[month] ? group2022[month] + hour : hour;\n                } else if (year === \"2021\") {\n                    group2021[month] = group2021[month] ? group2021[month] + hour : hour;\n                } else {\n                    group2020[month] = group2020[month] ? group2020[month] + hour : hour;\n                }\n                \n            }\n\n\n            for (let key in group2022) {\n                dataset2022.push([monthNames[+key - 1], group2022[key], +key]);\n            }\n\n            for (let key in group2021) {\n                dataset2021.push([monthNames[+key - 1], group2021[key], +key]);\n            }\n\n            for (let key in group2020) {\n                dataset2020.push([monthNames[+key - 1], group2020[key], +key]);\n            }\n\n\n            //construct a band scale with specified domain and range\n            xScale = d3.scaleBand()\n                        .domain(monthNames)\n                        .range([padding, w - padding])\n                        .paddingInner(1);\n\n            //construct a continuous scale with specified domain and range\n            yScale = d3.scaleLinear()\n                        .domain([0, 400])\n                        .range([h - padding, padding]);\n\n            //construct a bootom-oriented axis generator for the given scale\n            xAxis = d3.axisBottom()\n                        .scale(xScale);\n\n            //construct a left-oriented axis generator for the given scale\n            yAxis = d3.axisLeft()\n                        .scale(yScale)\n                        .tickFormat(d => d + \" h.\")\n                        .ticks(5); \n\n            let line = d3.line()  \n                            .x(d => xScale(d[0])) \n                            .y(d => yScale(d[1]));         \n\n            //create svg element\n            let svg = d3.select(this.props.hoursRef.current)\n                        .append(\"svg\")\n                        .attr(\"width\", w)\n                        .attr(\"height\", h);  \n\n            //create lines\n            let path2022 = svg.append(\"path\")\n                                .datum(dataset2022) \n                                .attr(\"class\", \"line\")\n                                .attr(\"d\", line); \n\n            let path2021 = svg.append(\"path\")\n                                .datum(dataset2021) \n                                .attr(\"class\", \"line2021\")\n                                .attr(\"d\", line);\n\n            let path2020 = svg.append(\"path\")\n                                .datum(dataset2020) \n                                .attr(\"class\", \"line2020\")\n                                .attr(\"d\", line);\n\n            //create dots\n            let circle2022 = svg.append(\"g\")\n                                .selectAll(\"circle\")\n                                .data(dataset2022)\n                                .enter()\n                                .append(\"circle\")\n                                    .attr(\"cx\", d => xScale(d[0]))\n                                    .attr(\"cy\", d => yScale(d[1]))\n                                    .attr(\"r\", 5)\n                                    .attr(\"fill\", \"#a8ddb5\")\n\n            let circle2021 = svg.append(\"g\")\n                                .selectAll(\"circle\")\n                                .data(dataset2021)\n                                .enter()\n                                .append(\"circle\")\n                                    .attr(\"cx\", d => xScale(d[0]))\n                                    .attr(\"cy\", d => yScale(d[1]))\n                                    .attr(\"r\", 5)\n                                    .attr(\"fill\", \"#e7298a\")\n\n            let circle2020 = svg.append(\"g\")\n                                .selectAll(\"circle\")\n                                .data(dataset2020)\n                                .enter()\n                                .append(\"circle\")\n                                    .attr(\"cx\", d => xScale(d[0]))\n                                    .attr(\"cy\", d => yScale(d[1]))\n                                    .attr(\"r\", 5)\n                                    .attr(\"fill\", \"#fee391\")\n\n            let totalLength2022 = path2022.node().getTotalLength();\n\n            path2022.attr(\"stroke-dasharray\", totalLength2022 + \" \" + totalLength2022)\n                    .attr(\"stroke-dashoffset\", totalLength2022)\n                    .transition()\n                        .duration(4000)\n                        .attr(\"stroke-dashoffset\", 0);\n\n            let totalLength2021 = path2021.node().getTotalLength();\n\n            path2021.attr(\"stroke-dasharray\", totalLength2021 + \" \" + totalLength2021)\n                    .attr(\"stroke-dashoffset\", totalLength2021)\n                    .transition()\n                        .duration(4000)\n                        .attr(\"stroke-dashoffset\", 0);\n\n            let totalLength2020 = path2020.node().getTotalLength();\n\n            path2020.attr(\"stroke-dasharray\", totalLength2020 + \" \" + totalLength2020)\n                    .attr(\"stroke-dashoffset\", totalLength2020)\n                    .transition()\n                        .duration(4000)\n                        .attr(\"stroke-dashoffset\", 0);                 \n\n            //Create axis-x and axis-y\n            svg.append(\"g\")\n                .attr(\"class\", \"axis-x\")\n                .attr(\"transform\", `translate(0, ${h - padding})`)\n                .attr(\"color\", \"#555\")\n                .call(xAxis)\n                .selectAll(\"text\")\n                .attr(\"font-size\", \"15px\")\n                .attr(\"color\", \"#000\")\n  \n            svg.append(\"g\")\n                .attr(\"class\", \"axis-y\")\n                .attr(\"transform\", `translate(${padding}, 0)`)\n                .attr(\"color\", \"#555\")\n                .call(yAxis)\n                .selectAll(\"text\")\n                .attr(\"font-size\", \"15px\")\n                .attr(\"color\", \"#000\");\n\n            //add label to each line\n            svg.append(\"text\")\n                .attr(\"transform\", `translate(${w - 100}, ${yScale(dataset2022[dataset2022.length - 1][1])})`)\n                .attr(\"dy\", \".35em\")\n                .attr(\"text-anchor\", \"start\")\n                .style(\"fill\", \"#a8ddb5\")\n                .transition()\n                    .delay(4000)\n                    .duration(400)\n                .text(\"2022\");\n\n            svg.append(\"text\")\n                .attr(\"transform\", `translate(${w - 100}, ${yScale(dataset2021[dataset2021.length - 1][1])})`)\n                .attr(\"dy\", \".35em\")\n                .attr(\"text-anchor\", \"start\")\n                .style(\"fill\", \"#e7298a\")\n                .transition()\n                    .delay(4000)\n                    .duration(400)\n                .text(\"2021\");\n            \n            svg.append(\"text\")\n                .attr(\"transform\", `translate(${w - 100}, ${yScale(dataset2020[dataset2020.length - 1][1])})`)\n                .attr(\"dy\", \".35em\")\n                .attr(\"text-anchor\", \"start\")\n                .style(\"fill\", \"#fee391\")\n                .transition()\n                    .delay(4000)\n                    .duration(400)\n                .text(\"2020\");\n\n            //define event listeners for click, mouseover, mouseout\n            circle2022.on(\"mouseover\", (event, d) => {\n\n                d3.select(event.currentTarget)\n                    .attr(\"fill\", \"#fd8d3c\");\n\n                d3.select(\"#hours\")\n                    .style(\"left\", event.pageX + \"px\")\n                    .style(\"top\", event.pageY + \"px\")\n                    .style(\"background-color\", \"#391D6A\")\n                    .selectAll(\"p\")\n                    .style(\"color\", \"#d95f02\")\n                    .select(\"#value\")\n                    .text(d[1]);\n\n                d3.select(\"#hours\")\n                    .select(\"#year\")\n                    .text(\"2022 \" + d[0]); \n\n                d3.select(\"#hours\").classed(\"hidden\", false);\n\n            })\n            .on(\"mouseout\", (event, d) => {\n                d3.select(event.currentTarget)\n                    .transition(\"restoreBarColor\")\n                    .duration(250)\n                    .attr(\"fill\",  d => \"#a8ddb5\");\n\n                d3.select(\"#hours\").classed(\"hidden\", true);\n            });\n\n            circle2021.on(\"mouseover\", (event, d) => {\n\n                d3.select(event.currentTarget)\n                    .attr(\"fill\", \"#fd8d3c\");\n\n                d3.select(\"#hours\")\n                    .style(\"left\", event.pageX + \"px\")\n                    .style(\"top\", event.pageY + \"px\")\n                    .style(\"background-color\", \"#391D6A\")\n                    .selectAll(\"p\")\n                    .style(\"color\", \"#e7298a\")\n                    .select(\"#value\")\n                    .text(d[1]);\n\n                d3.select(\"#hours\")\n                    .select(\"#year\")\n                    .text(\"2021 \" + d[0]); \n\n                d3.select(\"#hours\").classed(\"hidden\", false);\n\n            })\n            .on(\"mouseout\", (event, d) => {\n                d3.select(event.currentTarget)\n                    .transition(\"restoreBarColor\")\n                    .duration(250)\n                    .attr(\"fill\",  d => \"#e7298a\");\n\n                d3.select(\"#hours\").classed(\"hidden\", true);\n            });\n\n            circle2020.on(\"mouseover\", (event, d) => {\n\n                d3.select(event.currentTarget)\n                    .attr(\"fill\", \"#fd8d3c\");\n\n                d3.select(\"#hours\")\n                    .style(\"left\", event.pageX + \"px\")\n                    .style(\"top\", event.pageY + \"px\")\n                    .style(\"background-color\", \"#391D6A\")\n                    .selectAll(\"p\")\n                    .style(\"color\", \"#fee391\")\n                    .select(\"#value\")\n                    .text(d[1]);\n\n                d3.select(\"#hours\")\n                    .select(\"#year\")\n                    .text(\"2020 \" + d[0]); \n\n                d3.select(\"#hours\").classed(\"hidden\", false);\n\n            })\n            .on(\"mouseout\", (event, d) => {\n                d3.select(event.currentTarget)\n                    .transition(\"restoreBarColor\")\n                    .duration(250)\n                    .attr(\"fill\",  d => \"#fee391\");\n\n                d3.select(\"#hours\").classed(\"hidden\", true);\n            });\n\n\n\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"hours-monthly\" style={{display: this.props.selectedStatsID === 1 ? \"block\" : \"none\"}} >\n                <ChartHeader \n                    chartTitle=\"Event hours per month\"\n                    dotColor=\"#fee391\"\n                />\n                <ChartContainer \n                    containerRef={this.props.hoursRef} \n                    tooltipID=\"hours\"\n                    tooltipValueTitle=\"hours\"\n                    tooltipOption=\"out of\"\n                    display=\"none\"\n                />\n                <ChartFooter chartSource=\"The Warehouse Calendar, The Warehouse.\" />\n            </div>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}